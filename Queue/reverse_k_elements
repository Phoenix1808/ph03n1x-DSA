//Reverse first k elements of a queue

#include <bits/stdc++.h>
using namespace std;

queue <int> reverse(queue<int> &q, int k){
    if(q.empty() || k<0 || k>q.size()) return q;

    stack <int > s;

    //pushing first k elements into stack 
    for(int i=0;i<k;i++){
    s.push(q.front());
    q.pop();
    }
    
    //enquing elements from stack to queue
    while(!s.empty()){
        q.push(s.top());
        s.pop();
    }

    //moving remanining (n-k) elements to rear
    int rem = q.size()-k;
    for(int i=0;i<rem;i++){
       q.push(q.front());
       q.pop();
    }

    return q;
}

int main() {
    queue<int> q;
    q.push(1); q.push(2); q.push(3); q.push(4); q.push(5);

    int k = 3;
    queue<int> result = reverse(q, k);

    cout << "Queue after reversing first " << k << " elements:\n";
    while (!result.empty()) {
        cout << result.front() << " ";
        result.pop();
    }
}
